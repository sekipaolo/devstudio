&lt;Guidelines&gt;
            Format your answer as an XML document as this example. Remember to escape XML tags characters (&lt; and &gt;) characters:
           &lt;response&gt;
               &lt;text&gt;Any text not related to file changes&lt;/text&gt;
               &lt;file-changes&gt;
                   &lt;file path="gui/widgets.py" action="replace"&gt;
                        Here the full runnable content of the file
                   &lt;/file&gt;
                   &lt;file path="gui/new_file.py" action="create"&gt;
                        Here the full content of the newly created file
                   &lt;/file&gt;
                   &lt;file path="gui/deleted_file.py" action="delete"/&gt;
                   &lt;explanation&gt;
                        Here the explanation of the changes
                   &lt;/explanation&gt;                    
               &lt;/file-changes&gt;
           &lt;/response&gt;
        &lt;/Guidelines&gt;&lt;Sources&gt;&lt;Source path="admin/src/components/Login.js"&gt;
import React, { useState } from 'react';
import { useAuth } from '../hooks/useAuth';
import { useNavigate } from 'react-router-dom';

const Login = () =&gt; {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const { login } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = async (e) =&gt; {
    e.preventDefault();
    const success = await login(email, password);
    if (success) {
      navigate('/');
    } else {
      // Show error message
      alert('Login failed. Please try again.');
    }
  };

  return (
    &lt;form onSubmit={handleSubmit}&gt;
      &lt;input
        type="email"
        value={email}
        onChange={(e) =&gt; setEmail(e.target.value)}
        placeholder="Email"
        required
      /&gt;
      &lt;input
        type="password"
        value={password}
        onChange={(e) =&gt; setPassword(e.target.value)}
        placeholder="Password"
        required
      /&gt;
      &lt;button type="submit"&gt;Login&lt;/button&gt;
    &lt;/form&gt;
  );
};

export default Login;
&lt;/Source&gt;
&lt;Source path="admin/src/components/NavigationMenu.js"&gt;
import React from 'react';
import { Link } from 'react-router-dom';

const NavigationMenu = () =&gt; {
  return (
    &lt;nav className="navigation-menu"&gt;
      &lt;ul&gt;
        &lt;li&gt;&lt;Link to="/"&gt;Dashboard&lt;/Link&gt;&lt;/li&gt;
        &lt;li&gt;&lt;Link to="/users"&gt;User Management&lt;/Link&gt;&lt;/li&gt;
        {/* Add more navigation items as needed */}
      &lt;/ul&gt;
    &lt;/nav&gt;
  );
};

export default NavigationMenu;
&lt;/Source&gt;
&lt;Source path="admin/src/styles/global.css"&gt;
:root {
  --primary-color: #3498db;
  --secondary-color: #2c3e50;
  --background-color: #ecf0f1;
  --text-color: #34495e;
}

body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  line-height: 1.6;
  color: var(--text-color);
  background-color: var(--background-color);
  margin: 0;
  padding: 0;
}

.app-layout {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.top-bar {
  display: flex;
  justify-content: space-between;
  padding: 1rem;
  background-color: #f0f0f0;
}

.main-container {
  display: flex;
  flex: 1;
}

.navigation-menu {
  width: 200px;
  padding: 1rem;
  background-color: #e0e0e0;
}

.content {
  flex: 1;
  padding: 1rem;
}
.container {
  width: 90%;
  max-width: 1200px;
  margin: auto;
  padding: 20px;
}

.header {
  background: var(--secondary-color);
  color: white;
  padding: 1rem;
  text-align: center;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.nav {
  background: var(--primary-color);
  padding: 10px 0;
}

.nav-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.nav a {
  color: white;
  text-decoration: none;
  padding: 10px 15px;
  transition: background-color 0.3s;
}

.nav a:hover {
  background-color: rgba(255,255,255,0.1);
}

.button {
  display: inline-block;
  background: var(--primary-color);
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.button:hover {
  background: #2980b9;
}

.login-form {
  background: white;
  padding: 30px;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  max-width: 400px;
  margin: 40px auto;
}

.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  margin-bottom: 5px;
}

.form-group input {
  width: 100%;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
}

.card {
  background: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  padding: 20px;
  margin-bottom: 20px;
}
&lt;/Source&gt;
&lt;/Sources&gt;&lt;Task&gt;The topbar should be styled in a moderna way, have the usual account management icons on the right and hold a statusbar on the center. On the top left should be the button to collaps or open the navigation menu&lt;/Task&gt;

